{
  "dependencies": [
    "@udecode/plate-selection"
  ],
  "doc": {
    "description": "A visual overlay for selected blocks.",
    "docs": [
      {
        "route": "/docs/block-selection"
      },
      {
        "route": "https://pro.platejs.org/docs/components/block-selection"
      }
    ],
    "examples": [
      "block-selection-demo",
      "block-selection-pro"
    ],
    "label": "New"
  },
  "files": [
    {
      "content": "'use client';\n\nimport { useBlockSelected } from '@udecode/plate-selection/react';\nimport { type VariantProps, cva } from 'class-variance-authority';\n\nconst blockSelectionVariants = cva(\n  'pointer-events-none absolute inset-0 z-[1] bg-brand/[.13] transition-opacity',\n  {\n    defaultVariants: {\n      active: false,\n    },\n    variants: {\n      active: {\n        false: 'opacity-0',\n        true: 'opacity-100',\n      },\n    },\n  }\n);\n\nexport function BlockSelection({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement> &\n  VariantProps<typeof blockSelectionVariants>) {\n  const isBlockSelected = useBlockSelected();\n\n  if (!isBlockSelected) return null;\n\n  return (\n    <div\n      className={blockSelectionVariants({\n        active: isBlockSelected,\n        className,\n      })}\n      {...props}\n    />\n  );\n}\n",
      "path": "plate-ui/block-selection.tsx",
      "target": "components/plate-ui/block-selection.tsx",
      "type": "registry:ui"
    }
  ],
  "name": "block-selection",
  "registryDependencies": [],
  "type": "registry:ui"
}