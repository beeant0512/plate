{
  "dependencies": [
    "@udecode/plate-heading",
    "@udecode/plate-ai",
    "@udecode/plate-date",
    "@udecode/plate-indent-list"
  ],
  "doc": {
    "description": "A command input component for inserting various elements.",
    "docs": [
      {
        "route": "/docs/ai",
        "title": "AI"
      },
      {
        "route": "/docs/basic-elements",
        "title": "Basic Elements"
      },
      {
        "route": "/docs/date",
        "title": "Date"
      },
      {
        "route": "/docs/indent-list",
        "title": "Indent List"
      },
      {
        "route": "https://pro.platejs.org/docs/components/slash-input-element"
      }
    ],
    "examples": [
      "slash-command-demo",
      "slash-menu-pro"
    ],
    "label": "New"
  },
  "files": [
    {
      "content": "'use client';\n\nimport React, { type ComponentType, type SVGProps } from 'react';\n\nimport type { PlateEditor } from '@udecode/plate-common/react';\n\nimport { withRef } from '@udecode/cn';\nimport { AIChatPlugin } from '@udecode/plate-ai/react';\nimport { DatePlugin } from '@udecode/plate-date/react';\nimport { HEADING_KEYS } from '@udecode/plate-heading';\nimport { ListStyleType, toggleIndentList } from '@udecode/plate-indent-list';\nimport {\n  CalendarIcon,\n  Heading1Icon,\n  Heading2Icon,\n  Heading3Icon,\n  ListIcon,\n  ListOrderedIcon,\n  SparklesIcon,\n} from 'lucide-react';\n\nimport {\n  InlineCombobox,\n  InlineComboboxContent,\n  InlineComboboxEmpty,\n  InlineComboboxInput,\n  InlineComboboxItem,\n} from './inline-combobox';\nimport { PlateElement } from './plate-element';\n\ninterface SlashCommandRule {\n  icon: ComponentType<SVGProps<SVGSVGElement>>;\n  onSelect: (editor: PlateEditor) => void;\n  value: string;\n  className?: string;\n  focusEditor?: boolean;\n  keywords?: string[];\n}\n\nconst rules: SlashCommandRule[] = [\n  {\n    focusEditor: false,\n    icon: SparklesIcon,\n    value: 'AI',\n    onSelect: (editor) => {\n      editor.getApi(AIChatPlugin).aiChat.show();\n    },\n  },\n  {\n    icon: Heading1Icon,\n    value: 'Heading 1',\n    onSelect: (editor) => {\n      editor.tf.toggle.block({ type: HEADING_KEYS.h1 });\n    },\n  },\n  {\n    icon: Heading2Icon,\n    value: 'Heading 2',\n    onSelect: (editor) => {\n      editor.tf.toggle.block({ type: HEADING_KEYS.h2 });\n    },\n  },\n  {\n    icon: Heading3Icon,\n    value: 'Heading 3',\n    onSelect: (editor) => {\n      editor.tf.toggle.block({ type: HEADING_KEYS.h3 });\n    },\n  },\n  {\n    icon: ListIcon,\n    keywords: ['ul', 'unordered list'],\n    value: 'Bulleted list',\n    onSelect: (editor) => {\n      toggleIndentList(editor, {\n        listStyleType: ListStyleType.Disc,\n      });\n    },\n  },\n  {\n    icon: ListOrderedIcon,\n    keywords: ['ol', 'ordered list'],\n    value: 'Numbered list',\n    onSelect: (editor) => {\n      toggleIndentList(editor, {\n        listStyleType: ListStyleType.Decimal,\n      });\n    },\n  },\n  {\n    icon: CalendarIcon,\n    keywords: ['inline', 'date'],\n    value: 'Date',\n    onSelect: (editor) => {\n      editor.getTransforms(DatePlugin).insert.date();\n    },\n  },\n];\n\nexport const SlashInputElement = withRef<typeof PlateElement>(\n  ({ className, ...props }, ref) => {\n    const { children, editor, element } = props;\n\n    return (\n      <PlateElement\n        ref={ref}\n        as=\"span\"\n        data-slate-value={element.value}\n        {...props}\n      >\n        <InlineCombobox element={element} trigger=\"/\">\n          <InlineComboboxInput />\n\n          <InlineComboboxContent>\n            <InlineComboboxEmpty>\n              No matching commands found\n            </InlineComboboxEmpty>\n\n            {rules.map(\n              ({ focusEditor, icon: Icon, keywords, value, onSelect }) => (\n                <InlineComboboxItem\n                  key={value}\n                  value={value}\n                  onClick={() => onSelect(editor)}\n                  focusEditor={focusEditor}\n                  keywords={keywords}\n                >\n                  <Icon className=\"mr-2 size-4\" aria-hidden />\n                  {value}\n                </InlineComboboxItem>\n              )\n            )}\n          </InlineComboboxContent>\n        </InlineCombobox>\n\n        {children}\n      </PlateElement>\n    );\n  }\n);\n",
      "path": "plate-ui/slash-input-element.tsx",
      "target": "components/plate-ui/slash-input-element.tsx",
      "type": "registry:ui"
    }
  ],
  "name": "slash-input-element",
  "registryDependencies": [
    "inline-combobox",
    "plate-element"
  ],
  "type": "registry:ui"
}